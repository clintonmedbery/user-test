version: 2
jobs:
  test:
    filters:  # using regex filters requires the entire branch to match
      branches:
        only: dev
    working_directory: ~/app
    docker:
      - image: circleci/node:latest # (1)
    steps:
      - checkout
      - run:
          name: "What branch am I on now?"
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # (2)
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install npm dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run tests # (3)
          command: 'npm run test'
  docker-deploy-image:
    filters:  # using regex filters requires the entire branch to match
      branches:
        only: dev
    working_directory: ~/app
    machine:
      docker_layer_caching: false # (4) NEEDS TO BE TRUE
    steps:
      - checkout
      - run: | # (5)  
          docker build -t clintomed/user-test .
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push clintomed/user-test
  deploy-aws:
    filters:  # using regex filters requires the entire branch to match
      branches:
        only: dev
    working_directory: ~/app
    docker:
      - image: circleci/python:latest
    steps:
      - checkout
      - run: # (6)
          name: Installing deployment dependencies
          working_directory: /
          command: 'sudo pip install awsebcli --upgrade'
      - run: # (7)
          name: Deploying application to Elastic Beanstalk
          command: |
            if [ "$CIRCLE_BRANCH" = "dev" ]; then
                eb deploy UserTest-env
            fi

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - test
      - docker-deploy-image:
          requires:
            - test
      - deploy-aws:
          requires:
            - docker-deploy-image